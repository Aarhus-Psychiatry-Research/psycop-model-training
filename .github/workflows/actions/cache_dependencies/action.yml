name: "Cache dependencies"
description: "Caches dependencies"
inputs: {}
outputs: {}
runs:
  using: "ubuntu-latest"
  steps:
    - name: Overwrite version number from pyproject.toml, so it doesn't invalidate cache
      id: remove-version-from-toml
      if: matrix.os == 'ubuntu-latest'
      run: |
        sed -i "s/version = \".*\"/version = \"0.0.0\"/g" pyproject.toml
        cat pyproject.toml
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2.1.6
      with:
        path: |
          .venv
          poetry.lock
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}
    
    - name: Load cached .local (Poetry install location)
      id: cached-poetry
      if: (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest')
      uses: actions/cache@v2.1.6
      with:
        path: |
          ~/.local/
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}--${{ hashFiles('.github/workflows/test_prs.yml') }}
